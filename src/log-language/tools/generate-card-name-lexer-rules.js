const fs = require('fs');
const path = require('path');
const csvParse = require('csv-parse/sync');

const header = `// This is generated. Please do not edit this file.\n\n`

const cards = parseCardsCsv()

const cardsText = header + `export const cards = ${JSON.stringify(cards, undefined, 4)};`
saveToCardsTs(cardsText)

const cardNames = Object.keys(cards)
const cardNamesText = `export type CardName =\n${cardNames.map(name => `    | "${name}"`).join('\n')}`
saveToCardNamesTs(cardNamesText)


function parseCardsCsv() {
    const cardsCsvPath = path.resolve(__dirname, '../../../resources/cards.csv')
    const content = fs.readFileSync(cardsCsvPath, 'utf8')
    const records = csvParse.parse(content, {columns: true, skip_empty_lines: true});

    const cards = {}
    records.forEach(record => {
        cards[record['Name']] = {
            name: record['Name'],
            set: record['Set'],
            quantity: parseInt(record['Qty']),
            text: record['Text'],
            type: record['Type'],
            faction: record['Faction / Color'],
            cost: parseInt(record['Cost']),
            defense: parseInt(record['Defense']),
            role: record['Role'],
            notes: record['Notes']
        }
    })

    return cards
}

function saveToCardNamesTs(text) {
    const cardNamesFile = path.resolve(__dirname, '../domain/card-name.ts')
    fs.writeFile(cardNamesFile, header + text, err => {
        if (err) {
            return console.log(err);
        }
    });
}

function saveToCardsTs(text) {
    const cardsFile = path.resolve(__dirname, '../domain/cards.ts')
    fs.writeFile(cardsFile, text, err => {
        if (err) {
            return console.log(err);
        }
    });
}
