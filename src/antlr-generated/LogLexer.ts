// Generated from /Users/zebrckovic/Development-personal/star-realms-log-viewer/grammar/Log.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class LogLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly T__32 = 33;
	public static readonly T__33 = 34;
	public static readonly T__34 = 35;
	public static readonly T__35 = 36;
	public static readonly T__36 = 37;
	public static readonly T__37 = 38;
	public static readonly T__38 = 39;
	public static readonly T__39 = 40;
	public static readonly T__40 = 41;
	public static readonly T__41 = 42;
	public static readonly T__42 = 43;
	public static readonly T__43 = 44;
	public static readonly T__44 = 45;
	public static readonly T__45 = 46;
	public static readonly T__46 = 47;
	public static readonly NEWLINE = 48;
	public static readonly INDENT = 49;
	public static readonly SPACE = 50;
	public static readonly COLOR_OPEN = 51;
	public static readonly COLOR_CLOSE = 52;
	public static readonly NUM = 53;
	public static readonly WORD = 54;
	public static readonly UNKNOWN = 55;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'Play all'", 
                                                            "'Played'", 
                                                            "'Acquired'", 
                                                            "'ends turn'", 
                                                            "'Attacked'", 
                                                            "'for'", "'(New Authority:'", 
                                                            "')'", "'Scrapping'", 
                                                            "'is scrapping'", 
                                                            "':'", "'is not scrapping any cards'", 
                                                            "'is discarding'", 
                                                            "'Resolving Discard'", 
                                                            "'cards'", "'Activating'", 
                                                            "'Chose'", "'Resolving'", 
                                                            "'Shuffled discard pile to form new deck'", 
                                                            "'It is now '", 
                                                            "''s turn'", 
                                                            "'>'", "'ability available'", 
                                                            "'<'", "'-'", 
                                                            "'Drew'", "'cards.'", 
                                                            "'Refresh ally indicators'", 
                                                            "'Scrapped'", 
                                                            "'no more cards to discard'", 
                                                            "'Discarded'", 
                                                            "'==='", "'has won the game. ==='", 
                                                            "'Destroyed'", 
                                                            "'Revealed event'", 
                                                            "'to the top of the deck'", 
                                                            "'.'", "'Add'", 
                                                            "'Trade'", "'Combat'", 
                                                            "'Authority'", 
                                                            "'(Trade:'", 
                                                            "'(Combat:'", 
                                                            "'(Authority:'", 
                                                            "'Discard'", 
                                                            "'(Discarding:'", 
                                                            "'+'", null, 
                                                            "'        '", 
                                                            null, null, 
                                                            "'</color>'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             "NEWLINE", 
                                                             "INDENT", "SPACE", 
                                                             "COLOR_OPEN", 
                                                             "COLOR_CLOSE", 
                                                             "NUM", "WORD", 
                                                             "UNKNOWN" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "NEWLINE", "INDENT", 
		"SPACE", "COLOR_OPEN", "COLOR_CLOSE", "NUM", "WORD", "UNKNOWN",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, LogLexer._ATN, LogLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "Log.g4"; }

	public get literalNames(): (string | null)[] { return LogLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return LogLexer.symbolicNames; }
	public get ruleNames(): string[] { return LogLexer.ruleNames; }

	public get serializedATN(): number[] { return LogLexer._serializedATN; }

	public get channelNames(): string[] { return LogLexer.channelNames; }

	public get modeNames(): string[] { return LogLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,55,673,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,
	1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,
	1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,8,
	1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,
	1,9,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
	1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,
	11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
	1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
	13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,
	1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,
	16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,
	1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,
	18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
	1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,
	19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,22,1,22,
	1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,
	22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,
	1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,
	27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,
	1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,
	29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,
	1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,
	31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,
	1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,
	33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,
	1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,
	35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,
	1,36,1,36,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,
	39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,
	1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,
	42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,
	1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,
	45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,47,3,47,613,8,47,1,47,1,47,
	1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,4,49,627,8,49,11,49,12,
	49,628,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,4,50,
	643,8,50,11,50,12,50,644,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,
	51,1,51,1,51,1,51,1,51,1,51,1,52,4,52,663,8,52,11,52,12,52,664,1,53,4,53,
	668,8,53,11,53,12,53,669,1,54,1,54,0,0,55,1,1,3,2,5,3,7,4,9,5,11,6,13,7,
	15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,
	20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,
	32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,
	44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,
	55,1,0,3,3,0,48,57,65,70,97,102,1,0,48,57,4,0,48,57,65,90,95,95,97,122,
	677,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,
	0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,
	0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,
	0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,
	0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,
	0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,
	0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,
	0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,
	0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,
	0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,
	0,0,1,111,1,0,0,0,3,120,1,0,0,0,5,127,1,0,0,0,7,136,1,0,0,0,9,146,1,0,0,
	0,11,155,1,0,0,0,13,159,1,0,0,0,15,175,1,0,0,0,17,177,1,0,0,0,19,187,1,
	0,0,0,21,200,1,0,0,0,23,202,1,0,0,0,25,229,1,0,0,0,27,243,1,0,0,0,29,261,
	1,0,0,0,31,267,1,0,0,0,33,278,1,0,0,0,35,284,1,0,0,0,37,294,1,0,0,0,39,
	333,1,0,0,0,41,344,1,0,0,0,43,352,1,0,0,0,45,354,1,0,0,0,47,372,1,0,0,0,
	49,374,1,0,0,0,51,376,1,0,0,0,53,381,1,0,0,0,55,388,1,0,0,0,57,412,1,0,
	0,0,59,421,1,0,0,0,61,446,1,0,0,0,63,456,1,0,0,0,65,460,1,0,0,0,67,482,
	1,0,0,0,69,492,1,0,0,0,71,507,1,0,0,0,73,530,1,0,0,0,75,532,1,0,0,0,77,
	536,1,0,0,0,79,542,1,0,0,0,81,549,1,0,0,0,83,559,1,0,0,0,85,567,1,0,0,0,
	87,576,1,0,0,0,89,588,1,0,0,0,91,596,1,0,0,0,93,609,1,0,0,0,95,612,1,0,
	0,0,97,616,1,0,0,0,99,626,1,0,0,0,101,632,1,0,0,0,103,650,1,0,0,0,105,662,
	1,0,0,0,107,667,1,0,0,0,109,671,1,0,0,0,111,112,5,80,0,0,112,113,5,108,
	0,0,113,114,5,97,0,0,114,115,5,121,0,0,115,116,5,32,0,0,116,117,5,97,0,
	0,117,118,5,108,0,0,118,119,5,108,0,0,119,2,1,0,0,0,120,121,5,80,0,0,121,
	122,5,108,0,0,122,123,5,97,0,0,123,124,5,121,0,0,124,125,5,101,0,0,125,
	126,5,100,0,0,126,4,1,0,0,0,127,128,5,65,0,0,128,129,5,99,0,0,129,130,5,
	113,0,0,130,131,5,117,0,0,131,132,5,105,0,0,132,133,5,114,0,0,133,134,5,
	101,0,0,134,135,5,100,0,0,135,6,1,0,0,0,136,137,5,101,0,0,137,138,5,110,
	0,0,138,139,5,100,0,0,139,140,5,115,0,0,140,141,5,32,0,0,141,142,5,116,
	0,0,142,143,5,117,0,0,143,144,5,114,0,0,144,145,5,110,0,0,145,8,1,0,0,0,
	146,147,5,65,0,0,147,148,5,116,0,0,148,149,5,116,0,0,149,150,5,97,0,0,150,
	151,5,99,0,0,151,152,5,107,0,0,152,153,5,101,0,0,153,154,5,100,0,0,154,
	10,1,0,0,0,155,156,5,102,0,0,156,157,5,111,0,0,157,158,5,114,0,0,158,12,
	1,0,0,0,159,160,5,40,0,0,160,161,5,78,0,0,161,162,5,101,0,0,162,163,5,119,
	0,0,163,164,5,32,0,0,164,165,5,65,0,0,165,166,5,117,0,0,166,167,5,116,0,
	0,167,168,5,104,0,0,168,169,5,111,0,0,169,170,5,114,0,0,170,171,5,105,0,
	0,171,172,5,116,0,0,172,173,5,121,0,0,173,174,5,58,0,0,174,14,1,0,0,0,175,
	176,5,41,0,0,176,16,1,0,0,0,177,178,5,83,0,0,178,179,5,99,0,0,179,180,5,
	114,0,0,180,181,5,97,0,0,181,182,5,112,0,0,182,183,5,112,0,0,183,184,5,
	105,0,0,184,185,5,110,0,0,185,186,5,103,0,0,186,18,1,0,0,0,187,188,5,105,
	0,0,188,189,5,115,0,0,189,190,5,32,0,0,190,191,5,115,0,0,191,192,5,99,0,
	0,192,193,5,114,0,0,193,194,5,97,0,0,194,195,5,112,0,0,195,196,5,112,0,
	0,196,197,5,105,0,0,197,198,5,110,0,0,198,199,5,103,0,0,199,20,1,0,0,0,
	200,201,5,58,0,0,201,22,1,0,0,0,202,203,5,105,0,0,203,204,5,115,0,0,204,
	205,5,32,0,0,205,206,5,110,0,0,206,207,5,111,0,0,207,208,5,116,0,0,208,
	209,5,32,0,0,209,210,5,115,0,0,210,211,5,99,0,0,211,212,5,114,0,0,212,213,
	5,97,0,0,213,214,5,112,0,0,214,215,5,112,0,0,215,216,5,105,0,0,216,217,
	5,110,0,0,217,218,5,103,0,0,218,219,5,32,0,0,219,220,5,97,0,0,220,221,5,
	110,0,0,221,222,5,121,0,0,222,223,5,32,0,0,223,224,5,99,0,0,224,225,5,97,
	0,0,225,226,5,114,0,0,226,227,5,100,0,0,227,228,5,115,0,0,228,24,1,0,0,
	0,229,230,5,105,0,0,230,231,5,115,0,0,231,232,5,32,0,0,232,233,5,100,0,
	0,233,234,5,105,0,0,234,235,5,115,0,0,235,236,5,99,0,0,236,237,5,97,0,0,
	237,238,5,114,0,0,238,239,5,100,0,0,239,240,5,105,0,0,240,241,5,110,0,0,
	241,242,5,103,0,0,242,26,1,0,0,0,243,244,5,82,0,0,244,245,5,101,0,0,245,
	246,5,115,0,0,246,247,5,111,0,0,247,248,5,108,0,0,248,249,5,118,0,0,249,
	250,5,105,0,0,250,251,5,110,0,0,251,252,5,103,0,0,252,253,5,32,0,0,253,
	254,5,68,0,0,254,255,5,105,0,0,255,256,5,115,0,0,256,257,5,99,0,0,257,258,
	5,97,0,0,258,259,5,114,0,0,259,260,5,100,0,0,260,28,1,0,0,0,261,262,5,99,
	0,0,262,263,5,97,0,0,263,264,5,114,0,0,264,265,5,100,0,0,265,266,5,115,
	0,0,266,30,1,0,0,0,267,268,5,65,0,0,268,269,5,99,0,0,269,270,5,116,0,0,
	270,271,5,105,0,0,271,272,5,118,0,0,272,273,5,97,0,0,273,274,5,116,0,0,
	274,275,5,105,0,0,275,276,5,110,0,0,276,277,5,103,0,0,277,32,1,0,0,0,278,
	279,5,67,0,0,279,280,5,104,0,0,280,281,5,111,0,0,281,282,5,115,0,0,282,
	283,5,101,0,0,283,34,1,0,0,0,284,285,5,82,0,0,285,286,5,101,0,0,286,287,
	5,115,0,0,287,288,5,111,0,0,288,289,5,108,0,0,289,290,5,118,0,0,290,291,
	5,105,0,0,291,292,5,110,0,0,292,293,5,103,0,0,293,36,1,0,0,0,294,295,5,
	83,0,0,295,296,5,104,0,0,296,297,5,117,0,0,297,298,5,102,0,0,298,299,5,
	102,0,0,299,300,5,108,0,0,300,301,5,101,0,0,301,302,5,100,0,0,302,303,5,
	32,0,0,303,304,5,100,0,0,304,305,5,105,0,0,305,306,5,115,0,0,306,307,5,
	99,0,0,307,308,5,97,0,0,308,309,5,114,0,0,309,310,5,100,0,0,310,311,5,32,
	0,0,311,312,5,112,0,0,312,313,5,105,0,0,313,314,5,108,0,0,314,315,5,101,
	0,0,315,316,5,32,0,0,316,317,5,116,0,0,317,318,5,111,0,0,318,319,5,32,0,
	0,319,320,5,102,0,0,320,321,5,111,0,0,321,322,5,114,0,0,322,323,5,109,0,
	0,323,324,5,32,0,0,324,325,5,110,0,0,325,326,5,101,0,0,326,327,5,119,0,
	0,327,328,5,32,0,0,328,329,5,100,0,0,329,330,5,101,0,0,330,331,5,99,0,0,
	331,332,5,107,0,0,332,38,1,0,0,0,333,334,5,73,0,0,334,335,5,116,0,0,335,
	336,5,32,0,0,336,337,5,105,0,0,337,338,5,115,0,0,338,339,5,32,0,0,339,340,
	5,110,0,0,340,341,5,111,0,0,341,342,5,119,0,0,342,343,5,32,0,0,343,40,1,
	0,0,0,344,345,5,39,0,0,345,346,5,115,0,0,346,347,5,32,0,0,347,348,5,116,
	0,0,348,349,5,117,0,0,349,350,5,114,0,0,350,351,5,110,0,0,351,42,1,0,0,
	0,352,353,5,62,0,0,353,44,1,0,0,0,354,355,5,97,0,0,355,356,5,98,0,0,356,
	357,5,105,0,0,357,358,5,108,0,0,358,359,5,105,0,0,359,360,5,116,0,0,360,
	361,5,121,0,0,361,362,5,32,0,0,362,363,5,97,0,0,363,364,5,118,0,0,364,365,
	5,97,0,0,365,366,5,105,0,0,366,367,5,108,0,0,367,368,5,97,0,0,368,369,5,
	98,0,0,369,370,5,108,0,0,370,371,5,101,0,0,371,46,1,0,0,0,372,373,5,60,
	0,0,373,48,1,0,0,0,374,375,5,45,0,0,375,50,1,0,0,0,376,377,5,68,0,0,377,
	378,5,114,0,0,378,379,5,101,0,0,379,380,5,119,0,0,380,52,1,0,0,0,381,382,
	5,99,0,0,382,383,5,97,0,0,383,384,5,114,0,0,384,385,5,100,0,0,385,386,5,
	115,0,0,386,387,5,46,0,0,387,54,1,0,0,0,388,389,5,82,0,0,389,390,5,101,
	0,0,390,391,5,102,0,0,391,392,5,114,0,0,392,393,5,101,0,0,393,394,5,115,
	0,0,394,395,5,104,0,0,395,396,5,32,0,0,396,397,5,97,0,0,397,398,5,108,0,
	0,398,399,5,108,0,0,399,400,5,121,0,0,400,401,5,32,0,0,401,402,5,105,0,
	0,402,403,5,110,0,0,403,404,5,100,0,0,404,405,5,105,0,0,405,406,5,99,0,
	0,406,407,5,97,0,0,407,408,5,116,0,0,408,409,5,111,0,0,409,410,5,114,0,
	0,410,411,5,115,0,0,411,56,1,0,0,0,412,413,5,83,0,0,413,414,5,99,0,0,414,
	415,5,114,0,0,415,416,5,97,0,0,416,417,5,112,0,0,417,418,5,112,0,0,418,
	419,5,101,0,0,419,420,5,100,0,0,420,58,1,0,0,0,421,422,5,110,0,0,422,423,
	5,111,0,0,423,424,5,32,0,0,424,425,5,109,0,0,425,426,5,111,0,0,426,427,
	5,114,0,0,427,428,5,101,0,0,428,429,5,32,0,0,429,430,5,99,0,0,430,431,5,
	97,0,0,431,432,5,114,0,0,432,433,5,100,0,0,433,434,5,115,0,0,434,435,5,
	32,0,0,435,436,5,116,0,0,436,437,5,111,0,0,437,438,5,32,0,0,438,439,5,100,
	0,0,439,440,5,105,0,0,440,441,5,115,0,0,441,442,5,99,0,0,442,443,5,97,0,
	0,443,444,5,114,0,0,444,445,5,100,0,0,445,60,1,0,0,0,446,447,5,68,0,0,447,
	448,5,105,0,0,448,449,5,115,0,0,449,450,5,99,0,0,450,451,5,97,0,0,451,452,
	5,114,0,0,452,453,5,100,0,0,453,454,5,101,0,0,454,455,5,100,0,0,455,62,
	1,0,0,0,456,457,5,61,0,0,457,458,5,61,0,0,458,459,5,61,0,0,459,64,1,0,0,
	0,460,461,5,104,0,0,461,462,5,97,0,0,462,463,5,115,0,0,463,464,5,32,0,0,
	464,465,5,119,0,0,465,466,5,111,0,0,466,467,5,110,0,0,467,468,5,32,0,0,
	468,469,5,116,0,0,469,470,5,104,0,0,470,471,5,101,0,0,471,472,5,32,0,0,
	472,473,5,103,0,0,473,474,5,97,0,0,474,475,5,109,0,0,475,476,5,101,0,0,
	476,477,5,46,0,0,477,478,5,32,0,0,478,479,5,61,0,0,479,480,5,61,0,0,480,
	481,5,61,0,0,481,66,1,0,0,0,482,483,5,68,0,0,483,484,5,101,0,0,484,485,
	5,115,0,0,485,486,5,116,0,0,486,487,5,114,0,0,487,488,5,111,0,0,488,489,
	5,121,0,0,489,490,5,101,0,0,490,491,5,100,0,0,491,68,1,0,0,0,492,493,5,
	82,0,0,493,494,5,101,0,0,494,495,5,118,0,0,495,496,5,101,0,0,496,497,5,
	97,0,0,497,498,5,108,0,0,498,499,5,101,0,0,499,500,5,100,0,0,500,501,5,
	32,0,0,501,502,5,101,0,0,502,503,5,118,0,0,503,504,5,101,0,0,504,505,5,
	110,0,0,505,506,5,116,0,0,506,70,1,0,0,0,507,508,5,116,0,0,508,509,5,111,
	0,0,509,510,5,32,0,0,510,511,5,116,0,0,511,512,5,104,0,0,512,513,5,101,
	0,0,513,514,5,32,0,0,514,515,5,116,0,0,515,516,5,111,0,0,516,517,5,112,
	0,0,517,518,5,32,0,0,518,519,5,111,0,0,519,520,5,102,0,0,520,521,5,32,0,
	0,521,522,5,116,0,0,522,523,5,104,0,0,523,524,5,101,0,0,524,525,5,32,0,
	0,525,526,5,100,0,0,526,527,5,101,0,0,527,528,5,99,0,0,528,529,5,107,0,
	0,529,72,1,0,0,0,530,531,5,46,0,0,531,74,1,0,0,0,532,533,5,65,0,0,533,534,
	5,100,0,0,534,535,5,100,0,0,535,76,1,0,0,0,536,537,5,84,0,0,537,538,5,114,
	0,0,538,539,5,97,0,0,539,540,5,100,0,0,540,541,5,101,0,0,541,78,1,0,0,0,
	542,543,5,67,0,0,543,544,5,111,0,0,544,545,5,109,0,0,545,546,5,98,0,0,546,
	547,5,97,0,0,547,548,5,116,0,0,548,80,1,0,0,0,549,550,5,65,0,0,550,551,
	5,117,0,0,551,552,5,116,0,0,552,553,5,104,0,0,553,554,5,111,0,0,554,555,
	5,114,0,0,555,556,5,105,0,0,556,557,5,116,0,0,557,558,5,121,0,0,558,82,
	1,0,0,0,559,560,5,40,0,0,560,561,5,84,0,0,561,562,5,114,0,0,562,563,5,97,
	0,0,563,564,5,100,0,0,564,565,5,101,0,0,565,566,5,58,0,0,566,84,1,0,0,0,
	567,568,5,40,0,0,568,569,5,67,0,0,569,570,5,111,0,0,570,571,5,109,0,0,571,
	572,5,98,0,0,572,573,5,97,0,0,573,574,5,116,0,0,574,575,5,58,0,0,575,86,
	1,0,0,0,576,577,5,40,0,0,577,578,5,65,0,0,578,579,5,117,0,0,579,580,5,116,
	0,0,580,581,5,104,0,0,581,582,5,111,0,0,582,583,5,114,0,0,583,584,5,105,
	0,0,584,585,5,116,0,0,585,586,5,121,0,0,586,587,5,58,0,0,587,88,1,0,0,0,
	588,589,5,68,0,0,589,590,5,105,0,0,590,591,5,115,0,0,591,592,5,99,0,0,592,
	593,5,97,0,0,593,594,5,114,0,0,594,595,5,100,0,0,595,90,1,0,0,0,596,597,
	5,40,0,0,597,598,5,68,0,0,598,599,5,105,0,0,599,600,5,115,0,0,600,601,5,
	99,0,0,601,602,5,97,0,0,602,603,5,114,0,0,603,604,5,100,0,0,604,605,5,105,
	0,0,605,606,5,110,0,0,606,607,5,103,0,0,607,608,5,58,0,0,608,92,1,0,0,0,
	609,610,5,43,0,0,610,94,1,0,0,0,611,613,5,13,0,0,612,611,1,0,0,0,612,613,
	1,0,0,0,613,614,1,0,0,0,614,615,5,10,0,0,615,96,1,0,0,0,616,617,5,32,0,
	0,617,618,5,32,0,0,618,619,5,32,0,0,619,620,5,32,0,0,620,621,5,32,0,0,621,
	622,5,32,0,0,622,623,5,32,0,0,623,624,5,32,0,0,624,98,1,0,0,0,625,627,5,
	32,0,0,626,625,1,0,0,0,627,628,1,0,0,0,628,626,1,0,0,0,628,629,1,0,0,0,
	629,630,1,0,0,0,630,631,6,49,0,0,631,100,1,0,0,0,632,633,5,60,0,0,633,634,
	5,99,0,0,634,635,5,111,0,0,635,636,5,108,0,0,636,637,5,111,0,0,637,638,
	5,114,0,0,638,639,5,61,0,0,639,640,5,35,0,0,640,642,1,0,0,0,641,643,7,0,
	0,0,642,641,1,0,0,0,643,644,1,0,0,0,644,642,1,0,0,0,644,645,1,0,0,0,645,
	646,1,0,0,0,646,647,5,62,0,0,647,648,1,0,0,0,648,649,6,50,0,0,649,102,1,
	0,0,0,650,651,5,60,0,0,651,652,5,47,0,0,652,653,5,99,0,0,653,654,5,111,
	0,0,654,655,5,108,0,0,655,656,5,111,0,0,656,657,5,114,0,0,657,658,5,62,
	0,0,658,659,1,0,0,0,659,660,6,51,0,0,660,104,1,0,0,0,661,663,7,1,0,0,662,
	661,1,0,0,0,663,664,1,0,0,0,664,662,1,0,0,0,664,665,1,0,0,0,665,106,1,0,
	0,0,666,668,7,2,0,0,667,666,1,0,0,0,668,669,1,0,0,0,669,667,1,0,0,0,669,
	670,1,0,0,0,670,108,1,0,0,0,671,672,9,0,0,0,672,110,1,0,0,0,6,0,612,628,
	644,664,669,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!LogLexer.__ATN) {
			LogLexer.__ATN = new ATNDeserializer().deserialize(LogLexer._serializedATN);
		}

		return LogLexer.__ATN;
	}


	static DecisionsToDFA = LogLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}